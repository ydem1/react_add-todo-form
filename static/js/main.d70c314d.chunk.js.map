{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoInfo","todo","cn","completed","title","usersFromServer","find","userId","TodoList","todos","map","App","useState","todosFromServer","visibleTodos","setVisibleTodos","titleValue","setTitleValue","isTitleInput","setIsTitleInput","userValue","setUserValue","isUserSelected","setIsUserSelected","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","currentTodos","htmlFor","type","placeholder","value","onChange","target","disabled","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d70c314d.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined;\n};\n\nexport const UserInfo = ({ user }: Props) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n      key={user?.id}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../types/Todo';\n\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={usersFromServer.find(user => user.id === todo.userId)} />\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [visibleTodos, setVisibleTodos] = useState(todosFromServer);\n\n  const [titleValue, setTitleValue] = useState('');\n  const [isTitleInput, setIsTitleInput] = useState(true);\n\n  const [userValue, setUserValue] = useState(0);\n  const [isUserSelected, setIsUserSelected] = useState(true);\n\n  const handleSubmit = (event: React.FormEvent): number => {\n    event.preventDefault();\n\n    if (titleValue.trim() === '') {\n      setIsTitleInput(false);\n    }\n\n    if (userValue === 0) {\n      setIsUserSelected(false);\n    }\n\n    if (titleValue.trim() === '' || userValue === 0) {\n      return 0;\n    }\n\n    const newTodo = {\n      id: Math.max(...visibleTodos.map(todo => todo.id)) + 1,\n      title: titleValue,\n      completed: false,\n      userId: userValue,\n    };\n\n    setVisibleTodos(currentTodos => [...currentTodos, newTodo]);\n\n    setTitleValue('');\n    setUserValue(0);\n\n    return 0;\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setIsTitleInput(true);\n    setTitleValue(event.target.value);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setIsUserSelected(true);\n    setUserValue(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter title\"\n            value={titleValue}\n            onChange={handleTitle}\n          />\n          {!isTitleInput && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            name=\"title\"\n            data-cy=\"userSelect\"\n            value={userValue}\n            onChange={handleUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map((user, index) => (\n              <option key={user.id} value={1 + index}>{user.name}</option>\n            ))}\n          </select>\n\n          {!isUserSelected && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={visibleTodos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}